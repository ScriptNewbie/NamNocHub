{"version":3,"sources":["App/config/colors.js","App/config/fonts.js","App/components/basic/Text.js","App/components/basic/Button.js","App/services/httpServiecs.js","App/hooks/useDeleteDevice.js","App/components/devices/DeviceCard.js","App/components/devices/DevicesList.js","App/components/basic/FullScreen.js","App/hooks/useFurnace.js","App/components/topBar/Furnace.js","App/hooks/useTime.js","App/components/topBar/SystemTime.js","App/components/topBar/index.js","App/hooks/useNewDevices.js","App/hooks/useDevices.js","App/hooks/useOtherThings.js","App/screens/Main.js","App/components/basic/SafeBottomScrollableScreen.js","App/components/basic/TextInput.js","App/components/basic/TimeInput.js","App/components/basic/BooleanInput.js","App/hooks/useSettings.js","App/hooks/useModifySettings.js","App/hooks/useHubAddress.js","App/hooks/useModifyHubAddress.js","App/screens/Settings.js","App/components/devices/Schedule.js","App/hooks/useModifyDevice.js","App/screens/Device.js","App/hooks/useAddDevice.js","App/screens/NewDevice.js","App/navigation/navigationTheme.js","App.js"],"names":["colors","light","soft","apply","discard","primary","background","white","primaryButton","secondaryButton","disabled","warning","fonts","default","Platform","OS","sizeDefault","sizeTitle","sizeHeader","sizeSmall","sizeVerySmall","sizeBig","styles","StyleSheet","create","defaultFonts","fontFamily","fontSize","AppText","style","otherProps","Text","button","backgroundColor","borderRadius","justifyContent","padding","alignItems","text","color","Button","children","textStyle","onPress","TouchableWithoutFeedback","View","cookie","document","startsWith","substring","hubAddress","AsyncStorage","getItem","http","get","resource","a","async","baseUrl","axios","response","post","data","put","delete","useDeleteDevice","props","queryClient","useQueryClient","useMutation","device","onSuccess","invalidateQueries","onError","alert","deviceCard","width","borderWidth","borderColor","flexDirection","name","ip","leftSide","flex","rightSide","temp","tempIcon","marginBottom","marginRight","notAlive","opacity","height","marginLeft","loadingVisible","loadingNotVisible","DeviceCard","navigation","useNavigation","useState","loading","setLoading","useEffect","navigate","navigationPath","deviceDelete","alive","id","opened","notAliveIpColor","rightAction","mutate","FontAwesome","size","Swipeable","renderRightActions","numberOfLines","ActivityIndicator","FontAwesome5","sperarator","DeviceList","devices","FlatList","ItemSeparatorComponent","keyExtractor","toString","renderItem","item","screen","marginTop","Constants","statusBarHeight","borderTopWidth","Screen","fetchFurnace","useFurnace","useQuery","refetchInterval","Furnace","furnace","icon","isSuccess","on","fetchTime","useTime","systemTime","texts","SystemTime","time","dayOfWeek","topBar","TopBar","Feather","fetchNewDevices","useNewDevices","fetchDevices","useDevices","fetchOtherThings","mqttConnected","optionsSetByUser","otherThings","useOtherThings","container","paddingLeft","paddingRight","topMargin","margins","configureHub","connectionIssue","Main","newDevices","pulledTimestamps","setPulledTimestamps","newDevicesLoading","isLoading","newDevicesSuccess","devicesUpdatedAt","dataUpdatedAt","devicesLoading","devicesSuccess","newDevicesUpdatedAt","isError","items","content","length","DevicesList","refreshing","onRefresh","safeBottomSpace","ScrollView","SafeAreaView","border","input","disabledColor","AppTextInput","label","labelStyle","TextInput","editable","selectTextOnFocus","textAlign","inputContainer","buttonGroup","modal","modalContent","alignSelf","TimeInput","updateTime","value","isDatePickerVisible","setDatePickerVisibility","tempValue","setTempValue","valueIsInt","valueLength","pickedDate","Date","handleChange","e","date","type","retVal","toTimeString","split","parseInt","replace","screenWidth","Dimensions","onChange","target","onBlur","mode","Modal","transparent","visible","animationType","display","themeVariant","title","isAndroid","BooleanInput","Switch","onValueChange","fetchSettings","useSettings","useModifySettings","settings","getHubAddress","useHubAddress","useModifyHubAddress","modifyCookie","setItem","databaseHeader","dayBeginEnd","dayBegin","dayEnd","submit","Settings","hubAdressTouched","setHubAddressTouched","options","isFetching","ipDisabled","ipSuccess","modifyHubAddress","location","reload","Updates","hubIp","setHubIp","day","night","hysteresis","mqttaddress","mqtttopic","mqttuser","mqttpassword","mqttfurnacetopic","usedb","influxdb","url","organisation","bucket","key","setSettings","modifySettings","Alert","goBack","updateField","newSettings","updateInfluxField","keyboardType","autoCapitalize","onChangeText","secureTextEntry","changeUseDbBoolean","daysOfWeek","copyFromButtons","flexWrap","copyFromButton","margin","copyFromButtonText","timePeriods","divideDeleteText","divideDelete","lastDelete","verySmallTexts","periodTexts","Schedule","schedule","updateSchedule","divide","index","changed","times","end","lastTemp","previous","currentElement","previousMinutes","previousHours","currentElementMinutes","currentElementHours","minMiddle","Math","round","newElementMinutes","newEnd","slice","map","dayToCopyFrom","source","scheduleCopy","JSON","parse","stringify","copySchedule","maxValue","minValue","changeTime","splice","deleteScheduleEntry","changeTemp","changeLastTemp","useModifyDevice","header","harmonogram","Device","route","params","setDevice","oldName","modifyDevice","deleteDevice","deviceCopy","useAddDevice","NewDevice","addDevice","monday","tuesday","wednesday","thursday","friday","saturday","sunday","setSchedule","setName","AppTheme","DefaultTheme","LogBox","ignoreLogs","Stack","createStackNavigator","QueryClient","StackNavigator","Navigator","headerShown","component","App","StatusBar","barStyle","translucent","NavigationContainer","theme","client"],"mappings":"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","file":"static/js/app.0515e867.chunk.js","sourcesContent":["const lightModeColors = {\n  soft: \"grey\",\n  apply: \"green\",\n  discard: \"red\",\n  primary: \"black\",\n  background: \"white\",\n  white: \"white\",\n  primaryButton: \"grey\",\n  secondaryButton: \"rgb(20,128,250)\",\n  disabled: \"#d8d8d8\",\n  warning: \"#E4D00A\",\n};\n\nconst colors = {\n  light: lightModeColors,\n};\n\nexport default colors;\n","import { Platform } from \"react-native\";\n\nconst fonts = {\n  default: Platform.OS === \"android\" ? \"Roboto\" : \"Avenir\",\n  sizeDefault: 18,\n  sizeTitle: 28,\n  sizeHeader: 24,\n  sizeSmall: 16,\n  sizeVerySmall: 13,\n  sizeBig: 20,\n};\n\nexport default fonts;\n","import { Text, StyleSheet } from \"react-native\";\n\nimport fonts from \"../../config/fonts\";\n\nconst AppText = ({ style, ...otherProps }) => {\n  return <Text style={[styles.defaultFonts, style]} {...otherProps} />;\n};\n\nconst styles = StyleSheet.create({\n  defaultFonts: {\n    fontFamily: fonts.default,\n    fontSize: fonts.sizeDefault,\n  },\n});\n\nexport default AppText;\n","import { StyleSheet, View, TouchableWithoutFeedback } from \"react-native\";\nimport colors from \"../../config/colors\";\n\nimport Text from \"./Text\";\n\nfunction Button({ children, style, text, textStyle, onPress = () => {} }) {\n  return (\n    <TouchableWithoutFeedback onPress={onPress}>\n      <View style={[styles.button, style]}>\n        {children && children}\n        {text && <Text style={[styles.text, textStyle]}>{text}</Text>}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.light.primaryButton,\n    borderRadius: 10,\n    justifyContent: \"center\",\n    padding: 10,\n    alignItems: \"center\",\n  },\n  text: {\n    color: colors.light.white,\n  },\n});\n\nexport default Button;\n","import axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Platform } from \"react-native\";\n\nconst cookie =\n  document.cookie && document.cookie.startsWith(\"hub=http\")\n    ? document.cookie.substring(4)\n    : \"http://192.168.120.155:8080\";\nconst hubAddress =\n  Platform.OS === \"web\" ? cookie : AsyncStorage.getItem(\"hubIp\");\n\nconst http = {\n  get: async (resource) => {\n    const baseUrl = await hubAddress;\n    const response = await axios.get(baseUrl + resource);\n    return response;\n  },\n  post: async (resource, data) => {\n    const baseUrl = await hubAddress;\n    const response = await axios.post(baseUrl + resource, data);\n    return response;\n  },\n  put: async (resource, data) => {\n    const baseUrl = await hubAddress;\n    const response = await axios.put(baseUrl + resource, data);\n    return response;\n  },\n  delete: async (resource, data) => {\n    const baseUrl = await hubAddress;\n    const response = await axios.delete(baseUrl + resource, {\n      data,\n    });\n    return response;\n  },\n};\n\nexport default http;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst useDeleteDevice = (props = {}) => {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (device) => {\n      return http.delete(\"/devices\", device);\n    },\n    {\n      ...props,\n      onSuccess: () => {\n        queryClient.invalidateQueries();\n        if (props.onSuccess) props.onSuccess();\n      },\n      onError: () => {\n        alert(\"Nie udało się usunąć urządzenia!\");\n      },\n    }\n  );\n};\nexport default useDeleteDevice;\n","import {\n  View,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  ActivityIndicator,\n} from \"react-native\";\nimport { FontAwesome5, FontAwesome } from \"@expo/vector-icons\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useEffect } from \"react\";\n\nimport colors from \"../../config/colors\";\nimport fonts from \"../../config/fonts\";\nimport Text from \"../basic/Text\";\nimport Button from \"../basic/Button\";\nimport useDeleteDevice from \"../../hooks/useDeleteDevice\";\n\nfunction DeviceCard({ device }) {\n  const navigation = useNavigation();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (loading) {\n      navigation.navigate(navigationPath, device);\n      setLoading(false);\n    }\n  }, [loading]);\n  const deviceDelete = useDeleteDevice();\n\n  const { ip, temp, alive, id, opened } = device;\n  let { name } = device;\n  let opacity = {};\n  let notAliveIpColor = {};\n  //Device grayed out if not alieve\n  if (!alive) {\n    opacity = StyleSheet.create({ opacity: styles.notAlive.opacity });\n    notAliveIpColor = StyleSheet.create({ color: styles.notAlive.color });\n  }\n  //Delete option available if device paired, different navigation paths\n  let rightAction = <View />;\n  let navigationPath = \"NewDevice\";\n  if (name) {\n    navigationPath = \"Device\";\n    rightAction = (\n      <Button\n        style={styles.delete}\n        onPress={() => {\n          deviceDelete.mutate(device);\n        }}\n      >\n        <FontAwesome name=\"trash\" size={30} color={\"white\"} />\n      </Button>\n    );\n  } else name = id;\n  return (\n    <GestureHandlerRootView>\n      <Swipeable renderRightActions={() => rightAction}>\n        <TouchableWithoutFeedback\n          onPress={() => {\n            setLoading(true);\n          }}\n        >\n          <View style={[styles.deviceCard, opacity]}>\n            <View style={styles.leftSide}>\n              <Text numberOfLines={1} style={styles.name}>\n                {name}\n              </Text>\n              <Text style={[styles.ip, notAliveIpColor]}>\n                {alive ? ip : \"Nieaktywne\"}\n              </Text>\n            </View>\n            <View style={styles.rightSide}>\n              <ActivityIndicator\n                color={colors.light.primary}\n                style={[\n                  styles.loadingNotVisible,\n                  loading && styles.loadingVisible,\n                ]}\n              />\n              <FontAwesome5\n                color={opened ? colors.light.discard : colors.light.primary}\n                name=\"thermometer-half\"\n                style={styles.tempIcon}\n                size={styles.temp.fontSize}\n              />\n              <Text style={styles.temp}>{temp}</Text>\n            </View>\n          </View>\n        </TouchableWithoutFeedback>\n      </Swipeable>\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  deviceCard: {\n    width: \"100%\",\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: colors.light.soft,\n    padding: 10,\n    flexDirection: \"row\",\n    backgroundColor: colors.light.background,\n  },\n  name: {\n    fontSize: fonts.sizeBig,\n  },\n  ip: {\n    color: colors.light.apply,\n    fontSize: fonts.sizeSmall,\n  },\n  leftSide: {\n    flex: 1,\n  },\n  rightSide: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  temp: {\n    fontSize: fonts.sizeTitle,\n  },\n  tempIcon: {\n    marginBottom: -1,\n    marginRight: 5,\n  },\n  notAlive: {\n    opacity: 0.5,\n    color: colors.light.soft,\n  },\n  delete: {\n    backgroundColor: colors.light.discard,\n    height: \"100%\",\n    padding: 20,\n    marginLeft: 10,\n  },\n  loadingVisible: { opacity: 1 },\n  loadingNotVisible: { opacity: 0 },\n});\n\nexport default DeviceCard;\n","import { FlatList, StyleSheet, View } from \"react-native\";\nimport DeviceCard from \"./DeviceCard\";\n\nfunction DeviceList({ devices }) {\n  return (\n    <FlatList\n      ItemSeparatorComponent={() => {\n        return <View style={styles.sperarator} />;\n      }}\n      data={devices}\n      keyExtractor={(device) => device.id.toString()}\n      renderItem={({ item }) => <DeviceCard device={item} />}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  sperarator: {\n    height: 5,\n  },\n});\n\nexport default DeviceList;\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport colors from \"../../config/colors\";\n\nfunction Screen({ style, children }) {\n  return <View style={[styles.screen, style]}>{children}</View>;\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    marginTop: Constants.statusBarHeight,\n    borderTopWidth: 1,\n    borderColor: colors.light.soft,\n    flex: 1,\n  },\n});\n\nexport default Screen;\n","import { useQuery } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst fetchFurnace = async () => {\n  const { data } = await http.get(\"/furnace\");\n  return data;\n};\n\nconst useFurnace = () =>\n  useQuery(\"furnace\", fetchFurnace, {\n    refetchInterval: 5000,\n  });\nexport default useFurnace;\n","import { StyleSheet } from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport Button from \"../basic/Button\";\nimport useFurnace from \"../../hooks/useFurnace\";\n\nfunction Furnace() {\n  const { data: furnace, isSuccess } = useFurnace();\n  let icon = \"\";\n  if (isSuccess) {\n    if (!furnace.alive) icon = \"exclamation-triangle\";\n    else if (furnace.on) icon = \"fire\";\n  }\n  return (\n    <Button style={styles.button}>\n      {!!icon && <FontAwesome name={icon} size={32}></FontAwesome>}\n    </Button>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: { width: 52, backgroundColor: \"rgba(0,0,0,0)\" },\n});\n\nexport default Furnace;\n","import { useQuery } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst fetchTime = async () => {\n  const { data } = await http.get(\"/time\");\n  return data;\n};\n\nconst useTime = () =>\n  useQuery(\"time\", fetchTime, {\n    refetchInterval: 5000,\n  });\nexport default useTime;\n","import { StyleSheet, View, ActivityIndicator } from \"react-native\";\nimport fonts from \"../../config/fonts\";\nimport Text from \"../basic/Text\";\nimport useTime from \"../../hooks/useTime\";\nimport colors from \"../../config/colors\";\n\nfunction SystemTime() {\n  const { data: time, isSuccess } = useTime();\n  const daysOfWeek = [\n    \"Niedziela\",\n    \"Poniedziałek\",\n    \"Wtorek\",\n    \"Środa\",\n    \"Czwartek\",\n    \"Piątek\",\n    \"Sobota\",\n  ];\n\n  return (\n    <View style={styles.systemTime}>\n      {isSuccess ? (\n        <>\n          <Text style={styles.texts}>{daysOfWeek[time.dayOfWeek]}</Text>\n          <Text style={styles.texts}>{time.time}</Text>\n        </>\n      ) : (\n        <ActivityIndicator color={colors.light.primary} />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  systemTime: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  texts: { fontSize: fonts.sizeSmall },\n});\n\nexport default SystemTime;\n","import { StyleSheet, View } from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport Furnace from \"./Furnace\";\nimport Button from \"../basic/Button\";\nimport SystemTime from \"./SystemTime\";\n\nconst furnace = { on: 0, ip: \"\", alive: 1, timeStamp: 0 };\n\nfunction TopBar() {\n  const navigation = useNavigation();\n  return (\n    <View style={styles.topBar}>\n      <Furnace />\n      <SystemTime />\n      <Button>\n        <Feather\n          name=\"settings\"\n          onPress={() => {\n            navigation.navigate(\"Settings\");\n          }}\n          size={32}\n          color=\"white\"\n        />\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  topBar: { flexDirection: \"row\", justifyContent: \"space-between\" },\n});\n\nexport default TopBar;\n","import { useQuery } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst fetchNewDevices = async () => {\n  const { data } = await http.get(\"/newDevices\");\n  return data;\n};\n\nconst useNewDevices = () =>\n  useQuery(\"newDevices\", fetchNewDevices, {\n    refetchInterval: 5000,\n  });\nexport default useNewDevices;\n","import { useQuery } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst fetchDevices = async () => {\n  const { data } = await http.get(\"/devices\");\n  return data;\n};\n\nconst useDevices = () =>\n  useQuery(\"devices\", fetchDevices, {\n    refetchInterval: 5000,\n  });\nexport default useDevices;\n","import { useQuery } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst fetchOtherThings = async () => {\n  const { data: mqttConnected } = await http.get(\"/mqttconnected\");\n  const { data: optionsSetByUser } = await http.get(\"/options/set\");\n\n  const otherThings = {\n    mqttConnected: mqttConnected,\n    optionsSetByUser: optionsSetByUser,\n  };\n  return otherThings;\n};\n\nconst useOtherThings = () =>\n  useQuery(\"otherThings\", fetchOtherThings, {\n    refetchInterval: 60000,\n  });\nexport default useOtherThings;\n","import { StyleSheet, FlatList, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport DevicesList from \"../components/devices/DevicesList\";\nimport Screen from \"../components/basic/FullScreen\";\nimport Text from \"../components/basic/Text\";\nimport TopBar from \"../components/topBar\";\nimport fonts from \"../config/fonts\";\nimport useNewDevices from \"../hooks/useNewDevices\";\nimport useDevices from \"../hooks/useDevices\";\nimport useOtherThings from \"../hooks/useOtherThings\";\nimport Button from \"../components/basic/Button\";\nimport colors from \"../config/colors\";\n\nfunction Main() {\n  const navigation = useNavigation();\n  const [pulledTimestamps, setPulledTimestamps] = useState({\n    devices: null,\n    newDevices: null,\n  });\n  const queryClient = useQueryClient();\n  const {\n    data: newDevices,\n    isLoading: newDevicesLoading,\n    isSuccess: newDevicesSuccess,\n    dataUpdatedAt: devicesUpdatedAt,\n  } = useNewDevices();\n  const {\n    data: devices,\n    isLoading: devicesLoading,\n    isSuccess: devicesSuccess,\n    dataUpdatedAt: newDevicesUpdatedAt,\n  } = useDevices();\n\n  const { data: otherThings, isError, isSuccess } = useOtherThings();\n\n  const items = [\n    { id: \"1\", content: <View style={styles.topMargin} /> },\n    { id: \"5\", content: <TopBar /> },\n    {\n      id: \"6\",\n      content: (\n        <>\n          {isError && (\n            <Button\n              style={[styles.margins, styles.connectionIssue]}\n              text=\"Brak połączenia z HUBem!\"\n              onPress={() => {\n                navigation.navigate(\"Settings\");\n              }}\n            />\n          )}\n        </>\n      ),\n    },\n    {\n      id: \"7\",\n      content: (\n        <>\n          {isSuccess && !otherThings.optionsSetByUser && (\n            <Button\n              style={[styles.margins, styles.configureHub]}\n              text=\"Przeprowadź wstępną konfigurację huba!\"\n              onPress={() => {\n                navigation.navigate(\"Settings\");\n              }}\n            />\n          )}\n        </>\n      ),\n    },\n    {\n      id: \"8\",\n      content: (\n        <>\n          {isSuccess && !otherThings.mqttConnected && (\n            <Button\n              style={[styles.margins, styles.connectionIssue]}\n              onPress={() => {\n                navigation.navigate(\"Settings\");\n              }}\n              text=\"Brak połączenia z broakerem MQTT!\"\n            />\n          )}\n        </>\n      ),\n    },\n    { id: \"10\", content: <Text style={styles.texts}>Pokoje:</Text> },\n    {\n      id: \"20\",\n      content: devicesLoading ? (\n        <Text>Ładowanie urządzeń...</Text>\n      ) : devicesSuccess ? (\n        devices && devices.length ? (\n          <DevicesList devices={devices}></DevicesList>\n        ) : (\n          <Text>Żadne urządzenie nie zostało skonfigurowane w systemie!</Text>\n        )\n      ) : (\n        <Text>Błąd podczas ładowania urządzeń!</Text>\n      ),\n    },\n    {\n      id: \"30\",\n      content: (\n        <Text style={styles.texts}>Urządzenia oczekujące na parowanie:</Text>\n      ),\n    },\n    {\n      id: \"40\",\n      content: newDevicesLoading ? (\n        <Text>Ładowanie urządzeń...</Text>\n      ) : newDevicesSuccess ? (\n        newDevices && newDevices.length ? (\n          <DevicesList devices={newDevices}></DevicesList>\n        ) : (\n          <Text>Żadne urządzenie nie zostało skonfigurowane w systemie!</Text>\n        )\n      ) : (\n        <Text>Błąd podczas ładowania urządzeń!</Text>\n      ),\n    },\n  ];\n  return (\n    <Screen>\n      <FlatList\n        refreshing={\n          devicesUpdatedAt === pulledTimestamps[\"devices\"] ||\n          newDevicesUpdatedAt === pulledTimestamps[\"newDevices\"]\n        }\n        onRefresh={() => {\n          setPulledTimestamps({\n            devices: devicesUpdatedAt,\n            newDevices: newDevicesUpdatedAt,\n          });\n          queryClient.invalidateQueries();\n        }}\n        style={styles.container}\n        data={items}\n        keyExtractor={(item) => item.id.toString()}\n        renderItem={({ item }) => item.content}\n      />\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  texts: { fontSize: fonts.sizeHeader, marginBottom: 10, marginTop: 10 },\n  container: { paddingLeft: 10, paddingRight: 10 },\n  topMargin: { height: 10 },\n  margins: { marginTop: 10 },\n  configureHub: { backgroundColor: colors.light.warning },\n  connectionIssue: { backgroundColor: colors.light.discard },\n});\n\nexport default Main;\n","import React from \"react\";\nimport { ScrollView, StyleSheet, SafeAreaView } from \"react-native\";\n\nfunction Screen({ style, children }) {\n  return (\n    <ScrollView style={[styles.screen, style]}>\n      {children}\n      <SafeAreaView />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  safeBottomSpace: { height: 30 },\n});\n\nexport default Screen;\n","import { TextInput, StyleSheet, View } from \"react-native\";\nimport fonts from \"../../config/fonts\";\nimport colors from \"../../config/colors\";\nimport Text from \"./Text\";\n\nfunction AppTextInput({\n  label,\n  style,\n  labelStyle,\n  disabled = false,\n  ...otherProps\n}) {\n  let disabledColor = {};\n  if (disabled) disabledColor = styles.disabledColor;\n  return (\n    <View style={[styles.container, style]}>\n      {label && <Text style={labelStyle}>{label}</Text>}\n      <TextInput\n        editable={!disabled}\n        selectTextOnFocus={!disabled}\n        style={[styles.input, disabledColor]}\n        {...otherProps}\n      ></TextInput>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  border: {},\n  input: {\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 5,\n    fontFamily: fonts.default,\n    fontSize: fonts.sizeDefault,\n    borderColor: colors.light.soft,\n  },\n  container: {\n    flex: 1,\n  },\n  disabledColor: { backgroundColor: colors.light.disabled },\n});\n\nexport default AppTextInput;\n","import {\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Platform,\n  Modal,\n  Button,\n  SafeAreaView,\n  Dimensions,\n} from \"react-native\";\nimport colors from \"../../config/colors\";\nimport Text from \"./Text\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\n\nimport React, { useState } from \"react\";\nimport fonts from \"../../config/fonts\";\n\nfunction TimeInput({\n  label,\n  style,\n  updateTime = () => {},\n  value,\n  disabled = false,\n  ...otherProps\n}) {\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [tempValue, setTempValue] = useState();\n\n  const valueIsInt = typeof value === \"number\";\n\n  if (valueIsInt) {\n    value = value.toString();\n    if (value.length === 1) value = \"000\" + value;\n    const valueLength = value.length;\n    value =\n      value.substring(0, valueLength - 2) +\n      \":\" +\n      value.substring(valueLength - 2);\n    if (valueLength === 2) value = \"00\" + value;\n    if (valueLength === 3) value = \"0\" + value;\n  }\n\n  const pickedDate = new Date(\"2000-01-01T\" + value);\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n    if (Platform.OS === \"ios\") setTempValue(pickedDate);\n  };\n  const handleChange = (e, date) => {\n    setDatePickerVisibility(false);\n    if (e.type === \"set\") {\n      let retVal = date.toTimeString().split(\" \")[0].substring(0, 5);\n      if (valueIsInt) retVal = parseInt(retVal.replace(\":\", \"\"));\n      updateTime(retVal);\n    }\n  };\n  const handleTempChange = (e, date) => {\n    setTempValue(date);\n  };\n\n  const handleWebTempChange = ({ target }) => {\n    setTempValue(target.value);\n  };\n\n  const screenWidth = Dimensions.get(\"window\").width;\n  let disabledColor = {};\n  if (disabled) disabledColor = styles.disabledColor;\n  return (\n    <View style={[styles.container, style]}>\n      {label && <Text>{label}</Text>}\n      {Platform.OS === \"web\" ? (\n        <input\n          style={{\n            height: 2 * fonts.sizeDefault,\n            width: screenWidth / 5,\n            fontFamily: fonts.default,\n            backgroundColor: disabled\n              ? colors.light.disabled\n              : colors.light.background,\n            borderRadius: 5,\n            borderWidth: 1,\n            textAlign: \"center\",\n            alignSelf: \"center\",\n          }}\n          type=\"time\"\n          disabled={disabled}\n          value={tempValue ? tempValue : value}\n          onChange={handleWebTempChange}\n          onBlur={() => {\n            handleChange({ type: \"set\" }, new Date(\"2000-01-01T\" + tempValue));\n            setTempValue();\n          }}\n        />\n      ) : (\n        <>\n          <TouchableWithoutFeedback onPress={showDatePicker}>\n            <View style={[styles.inputContainer, disabledColor]}>\n              <Text style={styles.input} {...otherProps}>\n                {value}\n              </Text>\n            </View>\n          </TouchableWithoutFeedback>\n          {!disabled &&\n            (Platform.OS === \"android\" ? (\n              isDatePickerVisible && (\n                <DateTimePicker\n                  onChange={handleChange}\n                  mode=\"time\"\n                  value={pickedDate}\n                ></DateTimePicker>\n              )\n            ) : (\n              <Modal\n                transparent={true}\n                visible={isDatePickerVisible}\n                animationType=\"slide\"\n              >\n                <SafeAreaView style={styles.modal}>\n                  <View style={styles.modalContent}>\n                    <DateTimePicker\n                      onChange={handleTempChange}\n                      mode=\"time\"\n                      value={tempValue}\n                      display=\"spinner\"\n                      themeVariant=\"light\"\n                    ></DateTimePicker>\n                    <View style={styles.buttonGroup}>\n                      <Button\n                        title=\"Zamknij\"\n                        onPress={() => {\n                          setDatePickerVisibility(false);\n                        }}\n                      />\n                      <Button\n                        title=\"Zatwierdź\"\n                        onPress={() => {\n                          const input = {\n                            type: \"set\",\n                          };\n                          handleChange(input, tempValue);\n                        }}\n                      />\n                    </View>\n                  </View>\n                </SafeAreaView>\n              </Modal>\n            ))}\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  input: {\n    textAlign: \"center\",\n  },\n  inputContainer: {\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: colors.light.soft,\n    padding: 5,\n  },\n  disabledColor: { backgroundColor: colors.light.disabled },\n  buttonGroup: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    borderTopWidth: 1,\n    borderColor: colors.light.soft,\n    justifyContent: \"space-evenly\",\n    padding: 10,\n  },\n  modal: {\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  modalContent: {\n    backgroundColor: colors.light.background,\n    alignSelf: \"flex-end\",\n    marginBottom: 10,\n    flex: 1,\n    borderRadius: 30,\n    marginLeft: 15,\n    marginRight: 15,\n    borderWidth: 1,\n    borderColor: colors.light.soft,\n  },\n});\n\nexport default TimeInput;\n","import { StyleSheet, View, Switch, Platform } from \"react-native\";\nimport fonts from \"../../config/fonts\";\nimport colors from \"../../config/colors\";\nimport Text from \"./Text\";\n\nfunction BooleanInput({ label, style, value, onChange, ...otherProps }) {\n  return (\n    <View style={[styles.container, style]}>\n      {label && isAndroid && (\n        <Text style={styles.label} value={value}>\n          {label}:\n        </Text>\n      )}\n      <Switch onValueChange={onChange} value={value} {...otherProps} />\n      {label && !isAndroid && (\n        <Text style={styles.label} value={value}>\n          {label}.\n        </Text>\n      )}\n    </View>\n  );\n}\n\nconst isAndroid = Platform.OS === \"android\" ? true : false;\n\nconst styles = StyleSheet.create({\n  border: {},\n  input: {\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 5,\n    fontFamily: fonts.default,\n    borderColor: colors.light.soft,\n  },\n  label: {\n    marginLeft: Platform.OS === \"android\" ? 0 : 5,\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: Platform.OS === \"android\" ? \"space-between\" : \"flex-start\",\n  },\n});\n\nexport default BooleanInput;\n","import { useQuery } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst fetchSettings = async () => {\n  const { data } = await http.get(\"/options\");\n  return data;\n};\n\nconst useSettings = () =>\n  useQuery(\"settings\", fetchSettings, {\n    refetchInterval: false,\n  });\nexport default useSettings;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst useModifySettings = (props = {}) => {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (settings) => {\n      return http.put(\"/options\", settings);\n    },\n    {\n      ...props,\n      onSuccess: ({ data }) => {\n        queryClient.invalidateQueries();\n        if (props.onSuccess) props.onSuccess(data);\n      },\n      onError: () => {\n        alert(\n          \"Nie udało się zmodyfikować ustawień! Sprawdź czy pola zostały wypełnione poprawnie!\"\n        );\n      },\n    }\n  );\n};\nexport default useModifySettings;\n","import { useQuery } from \"react-query\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Platform } from \"react-native\";\n\nconst getHubAddress = async () => {\n  const value =\n    Platform.OS === \"web\"\n      ? document.cookie.substring(4)\n      : await AsyncStorage.getItem(\"hubIp\");\n  if (value) {\n    return value;\n  }\n  return \"http://\";\n};\n\nconst useHubAddress = () =>\n  useQuery(\"hubIp\", getHubAddress, {\n    refetchInterval: false,\n  });\nexport default useHubAddress;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Platform } from \"react-native\";\n\nconst modifyCookie = (value) => {\n  document.cookie = \"hub=\" + value;\n  return true;\n};\n\nconst useModifyHubAddress = (props) => {\n  return useMutation(\n    (value) => {\n      if (Platform.OS === \"web\") return modifyCookie(value);\n      return AsyncStorage.setItem(\"hubIp\", value);\n    },\n    {\n      onSuccess: props.onSuccess,\n    }\n  );\n};\nexport default useModifyHubAddress;\n","import { StyleSheet, View, Alert } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as Updates from \"expo-updates\";\nimport { Platform } from \"react-native\";\n\nimport Screen from \"../components/basic/SafeBottomScrollableScreen\";\nimport TextInput from \"../components/basic/TextInput\";\nimport Text from \"../components/basic/Text\";\nimport TimeInput from \"../components/basic/TimeInput\";\nimport BooleanInput from \"../components/basic/BooleanInput\";\nimport Button from \"../components/basic/Button\";\nimport colors from \"../config/colors\";\nimport fonts from \"../config/fonts\";\nimport useSettings from \"../hooks/useSettings\";\nimport useModifySettings from \"../hooks/useModifySettings\";\nimport useHubAddress from \"../hooks/useHubAddress\";\nimport useModifyHubAddress from \"../hooks/useModifyHubAddress\";\n\nfunction Settings() {\n  const [hubAdressTouched, setHubAddressTouched] = useState(false);\n  const navigation = useNavigation();\n  const { data: options, isSuccess, isFetching, isError } = useSettings();\n  const {\n    data: hubAddress,\n    isFetching: ipDisabled,\n    isSuccess: ipSuccess,\n  } = useHubAddress();\n  const modifyHubAddress = useModifyHubAddress({\n    onSuccess: () => {\n      Platform.OS === \"web\" ? location.reload() : Updates.reloadAsync();\n    },\n  });\n  const [hubIp, setHubIp] = useState(hubAddress);\n  const [settings, setSettings] = useState(\n    isSuccess\n      ? options\n      : {\n          day: \"08:00\",\n          night: \"22:00\",\n          hysteresis: 0.2,\n          mqttaddress: \"mqtt://127.0.0.1:1883\",\n          mqtttopic: \"NamNoc\",\n          mqttuser: \"\",\n          mqttpassword: \"\",\n          mqttfurnacetopic: \"furnace\",\n          usedb: false,\n          influxdb: {\n            url: \"\",\n            organisation: \"\",\n            bucket: \"\",\n            key: \"\",\n          },\n        }\n  );\n  const modifySettings = useModifySettings({\n    onSuccess: (response) => {\n      setSettings(response);\n      Alert.alert(\"Sukces!\", \"Czy chcesz pozostać na ekranie ustawień?\", [\n        {\n          text: \"Tak\",\n        },\n        {\n          text: \"Nie\",\n          onPress: () => {\n            navigation.goBack();\n          },\n        },\n      ]);\n    },\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      setSettings(options);\n    }\n  }, [options]);\n\n  useEffect(() => {\n    if (ipSuccess) {\n      setHubIp(hubAddress);\n    }\n  }, [hubAddress]);\n\n  const changeUseDbBoolean = () => {\n    const newSettings = { ...settings };\n    newSettings.usedb = !newSettings.usedb;\n    setSettings(newSettings);\n  };\n\n  const updateField = (target, value) => {\n    const newSettings = { ...settings };\n    newSettings[target] = value;\n    setSettings(newSettings);\n  };\n  const updateInfluxField = (target, value) => {\n    const newSettings = { ...settings };\n    newSettings.influxdb[target] = value;\n    setSettings(newSettings);\n  };\n\n  const disabled = isFetching || isError;\n  return (\n    <Screen>\n      <View style={styles.container}>\n        <Text style={styles.title}>Ustawienia</Text>\n        <TextInput\n          keyboardType=\"url\"\n          autoCapitalize=\"none\"\n          disabled={ipDisabled}\n          value={hubIp}\n          onChangeText={(value) => {\n            setHubIp(value);\n            setHubAddressTouched(true);\n          }}\n          label={\"Adres huba:\"}\n        ></TextInput>\n        {isSuccess && !hubAdressTouched && (\n          <>\n            <TextInput\n              onChangeText={(value) => {\n                updateField(\"mqttaddress\", value);\n              }}\n              keyboardType=\"url\"\n              autoCapitalize=\"none\"\n              value={settings.mqttaddress}\n              disabled={disabled}\n              label={\"Adres brokera MQTT:\"}\n            />\n            <TextInput\n              onChangeText={(value) => {\n                updateField(\"mqtttopic\", value);\n              }}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              value={settings.mqtttopic}\n              disabled={disabled}\n              label={\"Temat MQTT huba:\"}\n            />\n            <TextInput\n              onChangeText={(value) => {\n                updateField(\"mqttfurnacetopic\", value);\n              }}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              value={settings.mqttfurnacetopic}\n              disabled={disabled}\n              label={\"Temat MQTT pieca:\"}\n            />\n            <TextInput\n              onChangeText={(value) => {\n                updateField(\"mqttuser\", value);\n              }}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              value={settings.mqttuser}\n              disabled={disabled}\n              label={\"Użytkownik MQTT:\"}\n            />\n            <TextInput\n              onChangeText={(value) => {\n                updateField(\"mqttpassword\", value);\n              }}\n              value={settings.mqttpassword}\n              disabled={disabled}\n              secureTextEntry={true}\n              label={\"Hasło MQTT:\"}\n            />\n            <TextInput\n              value={settings.hysteresis.toString()}\n              onChangeText={(value) => {\n                updateField(\"hysteresis\", value);\n              }}\n              disabled={disabled}\n              keyboardType=\"numeric\"\n              label={\"Histereza :\"}\n            />\n            <View style={styles.dayBeginEnd}>\n              <TimeInput\n                disabled={disabled}\n                value={settings.day}\n                style={styles.dayBegin}\n                label={\"Początek dnia:\"}\n                updateTime={(value) => {\n                  updateField(\"day\", value);\n                }}\n              />\n              <TimeInput\n                disabled={disabled}\n                value={settings.night}\n                style={styles.dayEnd}\n                label={\"Koniec dnia:\"}\n                updateTime={(value) => {\n                  updateField(\"night\", value);\n                }}\n              />\n            </View>\n            <Text style={styles.databaseHeader}>Ustawienia influxDB:</Text>\n            <BooleanInput\n              disabled={disabled}\n              value={settings.usedb}\n              onChange={() => {\n                changeUseDbBoolean();\n              }}\n              label={\"Używaj bazy danych\"}\n            />\n            <TextInput\n              onChangeText={(value) => {\n                updateInfluxField(\"url\", value);\n              }}\n              value={settings.influxdb.url}\n              disabled={!settings.usedb}\n              keyboardType=\"url\"\n              autoCapitalize=\"none\"\n              label={\"Adres bazy danych:\"}\n            ></TextInput>\n            <TextInput\n              onChangeText={(value) => {\n                updateInfluxField(\"organisation\", value);\n              }}\n              value={settings.influxdb.organisation}\n              disabled={!settings.usedb}\n              label={\"Nazwa organizacji:\"}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n            ></TextInput>\n            <TextInput\n              onChangeText={(value) => {\n                updateInfluxField(\"bucket\", value);\n              }}\n              value={settings.influxdb.bucket}\n              disabled={!settings.usedb}\n              label={\"Nazwa Koszyka:\"}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n            ></TextInput>\n            <TextInput\n              onChangeText={(value) => {\n                updateInfluxField(\"key\", value);\n              }}\n              value={settings.influxdb.key}\n              secureTextEntry={true}\n              disabled={!settings.usedb}\n              label={\"Token autoryzacji:\"}\n            ></TextInput>\n          </>\n        )}\n        <Button\n          onPress={() => {\n            if (hubAdressTouched) return modifyHubAddress.mutate(hubIp);\n            if (isSuccess) return modifySettings.mutate(settings);\n            navigation.goBack();\n          }}\n          text=\"Zapisz ustawienia\"\n          style={styles.submit}\n        />\n      </View>\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: fonts.sizeTitle,\n  },\n  databaseHeader: {\n    marginTop: 20,\n    fontSize: fonts.sizeHeader,\n  },\n  dayBeginEnd: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  dayBegin: {\n    marginRight: 5,\n  },\n  dayEnd: {\n    marginLeft: 5,\n  },\n  container: {\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  submit: {\n    backgroundColor: colors.light.apply,\n    marginTop: 10,\n    marginBottom: 10,\n  },\n});\n\nexport default Settings;\n","import { StyleSheet, View } from \"react-native\";\nimport TimeInput from \"../basic/TimeInput\";\nimport Button from \"../basic/Button\";\nimport Text from \"../basic/Text\";\nimport TextInput from \"../basic/TextInput\";\nimport fonts from \"../../config/fonts\";\nimport colors from \"../../config/colors\";\n\nconst daysOfWeek = [\n  [\"monday\", \"Poniedziałek\", \"poniedziałku\"],\n  [\"tuesday\", \"Wtorek\", \"wtorku\"],\n  [\"wednesday\", \"Środa\", \"środy\"],\n  [\"thursday\", \"Czwartek\", \"czwartku\"],\n  [\"friday\", \"Piątek\", \"piątku\"],\n  [\"saturday\", \"Sobota\", \"soboty\"],\n  [\"sunday\", \"Niedziela\", \"niedzieli\"],\n];\n\nfunction Schedule({ schedule, updateSchedule }) {\n  const copySchedule = (source, target) => {\n    const scheduleCopy = JSON.parse(JSON.stringify(schedule[source]));\n    schedule[target] = scheduleCopy;\n    updateSchedule(schedule);\n  };\n\n  const changeTime = (day, index, value) => {\n    let maxValue = 2359;\n    let minValue = 0;\n\n    if (schedule[day].times.length !== index + 1) {\n      maxValue = schedule[day].times[index + 1].end;\n    }\n\n    if (index !== 0) {\n      minValue = schedule[day].times[index - 1].end;\n    }\n\n    if (maxValue > value && minValue < value) {\n      schedule[day].times[index].end = value;\n      updateSchedule(schedule);\n    } else\n      alert(\n        \"Nieprawidłowe granice przedziału! Upewnij się, czy początek przedziału jest mniejszy od końca przedziału, czy koniec tego przedziału jest mniejszy od końca kolejnego przedziału, oraz czy początek tego przedziału jest większy początku poprzedniego!\"\n      );\n  };\n\n  const changeTemp = (target, index, value) => {\n    schedule[target].times[index].temp = value;\n    updateSchedule(schedule);\n  };\n\n  const changeLastTemp = (target, value) => {\n    schedule[target].lastTemp = value;\n    updateSchedule(schedule);\n  };\n\n  const deleteScheduleEntry = (target, index) => {\n    schedule[target].times.splice(index, 1);\n    updateSchedule(schedule);\n  };\n\n  const divide = (target, index) => {\n    let changed = false;\n    if (schedule[target].times.length === 0) {\n      schedule[target].times = [\n        {\n          end: 1200,\n          temp: schedule[target].lastTemp,\n        },\n      ];\n      changed = true;\n    } else {\n      let previous = 0;\n      let currentElement = {\n        end: 2359,\n        temp: schedule[target].lastTemp,\n      };\n      if (index > 0) {\n        previous = schedule[target].times[index - 1].end;\n      }\n      const previousMinutes = previous % 100;\n      const previousHours = (previous - previousMinutes) / 100;\n      if (index !== schedule[target].times.length)\n        currentElement = schedule[target].times[index];\n      const currentElementMinutes = currentElement.end % 100;\n      const currentElementHours =\n        (currentElement.end - currentElementMinutes) / 100;\n      const minMiddle = Math.round(\n        (previousHours * 60 +\n          previousMinutes +\n          (currentElementHours * 60 + currentElementMinutes)) /\n          2\n      );\n      const newElementMinutes = minMiddle % 60;\n      const newElementHours = ((minMiddle - newElementMinutes) / 60) * 100;\n\n      const newEnd = newElementHours + newElementMinutes;\n\n      if (newEnd < currentElement.end) {\n        const times = [\n          ...schedule[target].times.slice(0, index),\n          {\n            end: newEnd,\n            temp: currentElement.temp,\n          },\n          ...schedule[target].times.slice(index),\n        ];\n        schedule[target].times = times;\n        changed = true;\n      }\n    }\n    if (changed) {\n      updateSchedule(schedule);\n    } else alert(\"Przedział nie może być krótszy niż minuta!\");\n  };\n\n  let previous = <TimeInput disabled value={\"00:00\"} />;\n  return (\n    <View>\n      {daysOfWeek.map((dayOfWeek) => (\n        <View style={styles.dayOfWeek} key={dayOfWeek[0]}>\n          <Text>{dayOfWeek[1]}</Text>\n          <Text style={styles.verySmallTexts}>Kopiuj z:</Text>\n          <View style={styles.copyFromButtons}>\n            {daysOfWeek.map((dayToCopyFrom) => (\n              <Button\n                key={dayToCopyFrom[0]}\n                onPress={() => {\n                  copySchedule(dayToCopyFrom[0], dayOfWeek[0]);\n                }}\n                text={dayToCopyFrom[2]}\n                style={styles.copyFromButton}\n                textStyle={styles.copyFromButtonText}\n              />\n            ))}\n          </View>\n          <Text style={styles.periodTexts}>Przedział 1</Text>\n          {schedule[dayOfWeek[0]].times.map((time, index) => (\n            <View key={time.end}>\n              <View style={styles.timePeriods}>\n                {previous}\n                <Text> – </Text>\n                {\n                  (previous = (\n                    <TimeInput\n                      value={time.end}\n                      updateTime={(value) => {\n                        changeTime(dayOfWeek[0], index, value);\n                      }}\n                    />\n                  ))\n                }\n                <Button\n                  onPress={() => {\n                    divide(dayOfWeek[0], index);\n                  }}\n                  text={\"Podziel\"}\n                  textStyle={styles.divideDeleteText}\n                  style={styles.divideDelete}\n                />\n                <Button\n                  textStyle={styles.divideDeleteText}\n                  style={[styles.divideDelete, styles.delete]}\n                  name={dayOfWeek[0]}\n                  onPress={() => {\n                    deleteScheduleEntry(dayOfWeek[0], index);\n                  }}\n                  text={\"Usuń\"}\n                />\n              </View>\n              <TextInput\n                label={\"Temperatura:\"}\n                labelStyle={styles.verySmallTexts}\n                keyboardType=\"numeric\"\n                value={time.temp.toString()}\n                onChangeText={(value) => {\n                  changeTemp(dayOfWeek[0], index, value);\n                }}\n              ></TextInput>\n              <Text style={styles.periodTexts}>Przedział {index + 2}</Text>\n            </View>\n          ))}\n          <View style={styles.timePeriods}>\n            {previous}\n            <Text> – </Text>\n            <TimeInput disabled value={\"23:59\"} />\n            <Button\n              name={dayOfWeek[0]}\n              onPress={() => {\n                divide(dayOfWeek[0], schedule[dayOfWeek[0]].times.length);\n              }}\n              text={\"Podziel\"}\n              textStyle={styles.divideDeleteText}\n              style={styles.divideDelete}\n            />\n            <Button\n              textStyle={styles.divideDeleteText}\n              style={[styles.divideDelete, styles.delete, styles.lastDelete]}\n              name={dayOfWeek[0]}\n              onPress={() => {\n                alert(\"Nie można usuwać ostatniego przedziału!\");\n              }}\n              text={\"Usuń\"}\n            />\n          </View>\n          <TextInput\n            label={\"Temperatura:\"}\n            labelStyle={styles.verySmallTexts}\n            keyboardType=\"numeric\"\n            value={schedule[dayOfWeek[0]].lastTemp.toString()}\n            onChangeText={(value) => changeLastTemp(dayOfWeek[0], value)}\n          ></TextInput>\n          {(() => {\n            previous = <TimeInput disabled value={\"00:00\"} />;\n          })()}\n        </View>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  copyFromButtons: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  copyFromButton: { margin: 2, backgroundColor: colors.light.secondaryButton },\n  copyFromButtonText: { fontSize: fonts.sizeVerySmall },\n  timePeriods: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  divideDeleteText: { fontSize: fonts.sizeVerySmall },\n  divideDelete: { marginLeft: 5 },\n  delete: { backgroundColor: colors.light.discard },\n  lastDelete: { opacity: 0.5 },\n  verySmallTexts: { fontSize: fonts.sizeVerySmall },\n  periodTexts: { fontSize: fonts.sizeSmall },\n  dayOfWeek: {\n    borderColor: colors.light.soft,\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 5,\n    marginTop: 5,\n  },\n});\n\nexport default Schedule;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst useModifyDevice = (props = {}) => {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (device) => {\n      return http.put(\"/devices\", device);\n    },\n    {\n      ...props,\n      onSuccess: ({ data }) => {\n        queryClient.invalidateQueries();\n        if (props.onSuccess) props.onSuccess(data);\n      },\n      onError: () => {\n        alert(\n          \"Nie udało się zmodyfikować urządzenia! Sprawdź czy pola zostały wypełnione poprawnie!\"\n        );\n      },\n    }\n  );\n};\nexport default useModifyDevice;\n","import { StyleSheet, Alert, View, Platform } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport Screen from \"../components/basic/SafeBottomScrollableScreen\";\nimport TextInput from \"../components/basic/TextInput\";\nimport Text from \"../components/basic/Text\";\nimport Button from \"../components/basic/Button\";\nimport colors from \"../config/colors\";\nimport fonts from \"../config/fonts\";\nimport Schedule from \"../components/devices/Schedule\";\nimport useDeleteDevice from \"../hooks/useDeleteDevice\";\nimport useModifyDevice from \"../hooks/useModifyDevice\";\n\nfunction Device({ route }) {\n  const [device, setDevice] = useState(route.params);\n  const [oldName] = useState({ ...device }.name);\n  const modifyDevice = useModifyDevice({\n    onSuccess: (response) => {\n      Platform.OS === \"web\"\n        ? navigation.goBack()\n        : Alert.alert(\n            \"Sukces!\",\n            \"Czy chcesz pozostać na ekranie konfiguracji urządzenia \" +\n              response.name +\n              \"?\",\n            [\n              {\n                text: \"Tak\",\n                onPress: () => {\n                  setDevice(response);\n                },\n              },\n              {\n                text: \"Nie\",\n                onPress: () => {\n                  navigation.goBack();\n                },\n              },\n            ]\n          );\n    },\n  });\n\n  const navigation = useNavigation();\n  const deleteDevice = useDeleteDevice({\n    onSuccess: () => {\n      navigation.goBack();\n    },\n  });\n\n  const { name, schedule } = device;\n\n  const updateSchedule = (schedule) => {\n    const deviceCopy = { ...device };\n    deviceCopy.schedule = schedule;\n    setDevice(deviceCopy);\n  };\n\n  const changeName = (value) => {\n    const deviceCopy = { ...device };\n    deviceCopy.name = value;\n    setDevice(deviceCopy);\n  };\n\n  const saveSettings = () => {\n    modifyDevice.mutate(device);\n  };\n\n  return (\n    <Screen>\n      <View style={styles.container}>\n        <Text style={styles.title}>{oldName}</Text>\n        <Button\n          text=\"Usuń z systemu\"\n          onPress={() => {\n            deleteDevice.mutate(device);\n          }}\n          style={styles.delete}\n        />\n        <Text style={styles.header}>Zmiana ustawień</Text>\n        <TextInput\n          label={\"Nazwa pomieszczenia:\"}\n          onChangeText={changeName}\n          value={name}\n        ></TextInput>\n        <Text style={styles.harmonogram}>Harmonogram:</Text>\n        <Schedule\n          schedule={schedule}\n          updateSchedule={updateSchedule}\n        ></Schedule>\n        <Button\n          text=\"Zapisz ustawienia\"\n          onPress={saveSettings}\n          style={styles.submit}\n        />\n      </View>\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: fonts.sizeTitle,\n    textAlign: \"justify\",\n  },\n  header: {\n    marginTop: 10,\n    fontSize: fonts.sizeHeader,\n  },\n  harmonogram: {\n    fontSize: fonts.sizeBig,\n  },\n  container: {\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  submit: {\n    backgroundColor: colors.light.apply,\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  delete: {\n    backgroundColor: colors.light.discard,\n    marginTop: 10,\n    marginBottom: 10,\n  },\n});\n\nexport default Device;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport http from \"../services/httpServiecs\";\n\nconst useAddDevice = (props = {}) => {\n  const queryClient = useQueryClient();\n  return useMutation(\n    (device) => {\n      return http.post(\"/devices\", device);\n    },\n    {\n      ...props,\n      onSuccess: () => {\n        queryClient.invalidateQueries();\n        if (props.onSuccess) props.onSuccess();\n      },\n      onError: () => {\n        alert(\n          \"Nie udało się dodać urządzenia! Sprawdź czy pola zostały wypełnione poprawnie!\"\n        );\n      },\n    }\n  );\n};\nexport default useAddDevice;\n","import { StyleSheet, View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useQueryClient } from \"react-query\";\n\nimport Screen from \"../components/basic/SafeBottomScrollableScreen\";\nimport TextInput from \"../components/basic/TextInput\";\nimport Text from \"../components/basic/Text\";\nimport Button from \"../components/basic/Button\";\nimport colors from \"../config/colors\";\nimport fonts from \"../config/fonts\";\nimport Schedule from \"../components/devices/Schedule\";\nimport useAddDevice from \"../hooks/useAddDevice\";\n\nfunction NewDevice({ route }) {\n  const navigation = useNavigation();\n  const queryClient = useQueryClient();\n  const addDevice = useAddDevice({\n    onSuccess: () => {\n      navigation.goBack();\n    },\n  });\n  const [schedule, setSchedule] = useState({\n    monday: {\n      times: [],\n      lastTemp: 20,\n    },\n    tuesday: {\n      times: [],\n      lastTemp: 20,\n    },\n    wednesday: {\n      times: [],\n      lastTemp: 20,\n    },\n    thursday: {\n      times: [],\n      lastTemp: 20,\n    },\n    friday: {\n      times: [],\n      lastTemp: 20,\n    },\n    saturday: {\n      times: [],\n      lastTemp: 20,\n    },\n    sunday: {\n      times: [],\n      lastTemp: 20,\n    },\n  });\n\n  const [name, setName] = useState(\"\");\n\n  const { id } = route.params;\n\n  const updateSchedule = (schedule) => {\n    setSchedule({ ...schedule });\n  };\n\n  const saveSettings = () => {\n    const device = { name, schedule, ...route.params };\n    addDevice.mutate(device);\n  };\n\n  return (\n    <Screen>\n      <View style={styles.container}>\n        <View>\n          <Text style={styles.title}>Nowe urządzenie</Text>\n          <Text style={styles.id}>{id}</Text>\n        </View>\n        <Text style={styles.header}>Konfiguracja urządzenia</Text>\n        <TextInput\n          label={\"Nazwa pomieszczenia:\"}\n          onChangeText={(value) => setName(value)}\n        ></TextInput>\n        <Text style={styles.harmonogram}>Harmonogram:</Text>\n        <Schedule\n          schedule={schedule}\n          updateSchedule={updateSchedule}\n        ></Schedule>\n        <Button\n          text=\"Dodaj do systemu\"\n          onPress={saveSettings}\n          style={styles.submit}\n        />\n      </View>\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: fonts.sizeTitle,\n  },\n  header: {\n    marginTop: 10,\n    fontSize: fonts.sizeHeader,\n  },\n  harmonogram: {\n    fontSize: fonts.sizeBig,\n  },\n  container: {\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  submit: {\n    backgroundColor: colors.light.apply,\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  id: { fontSize: fonts.sizeVerySmall },\n});\n\nexport default NewDevice;\n","import { DefaultTheme } from \"@react-navigation/native\";\nimport colors from \"../config/colors\";\n\nconst AppTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    background: colors.light.background,\n  },\n};\n\nexport default AppTheme;\n","import { Platform, StatusBar } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { LogBox } from \"react-native\";\nLogBox.ignoreLogs([\"Setting a timer for a long period of time\"]);\n\nimport Main from \"./App/screens/Main\";\nimport Settings from \"./App/screens/Settings\";\nimport Device from \"./App/screens/Device\";\nimport NewDevice from \"./App/screens/NewDevice\";\nimport AppTheme from \"./App/navigation/navigationTheme\";\n\nconst Stack = createStackNavigator();\nconst queryClient = new QueryClient();\n\nconst StackNavigator = () => (\n  <Stack.Navigator>\n    <Stack.Screen\n      name=\"Main\"\n      options={{ headerShown: false, title: \"Ekran główny\" }}\n      component={Main}\n    />\n    <Stack.Screen\n      name=\"Settings\"\n      options={{ title: \"\" }}\n      component={Settings}\n    />\n    <Stack.Screen name=\"Device\" options={{ title: \"\" }} component={Device} />\n    <Stack.Screen\n      name=\"NewDevice\"\n      options={{ title: \"\" }}\n      component={NewDevice}\n    />\n  </Stack.Navigator>\n);\n\nexport default function App() {\n  return (\n    <>\n      {Platform.OS === \"ios\" && (\n        <StatusBar barStyle=\"dark-content\" translucent />\n      )}\n      <NavigationContainer theme={AppTheme}>\n        <QueryClientProvider client={queryClient}>\n          <StackNavigator />\n        </QueryClientProvider>\n      </NavigationContainer>\n    </>\n  );\n}\n"],"sourceRoot":""}